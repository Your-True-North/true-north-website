generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String   @id @default(cuid())
  email                 String   @unique
  name                  String
  password              String
  role                  String   @default("member")
  stripeCustomerId      String?  @unique
  stripeSubscriptionId  String?  @unique
  joinDate              DateTime @default(now())
  level                 String   @default("newcomer")
  isActive              Boolean  @default(true)
  lastLogin             DateTime?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  comments              Comment[]
  reactions             Reaction[]
  
  @@map("users")
}

model Video {
  id            String   @id @default(cuid())
  title         String
  description   String?
  youtubeUrl    String
  youtubeId     String
  category      String
  duration      Int?
  thumbnailUrl  String?
  status        String   @default("published")
  uploadDate    DateTime @default(now())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  comments      Comment[]
  reactions     Reaction[]
  
  @@map("videos")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  videoId   String
  userId    String
  parentId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  video     Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  parent    Comment? @relation("CommentReplies", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentReplies")
  
  @@map("comments")
}

model Reaction {
  id      String @id @default(cuid())
  type    String
  videoId String
  userId  String
  createdAt DateTime @default(now())

  video   Video  @relation(fields: [videoId], references: [id], onDelete: Cascade)
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([videoId, userId, type])
  @@map("reactions")
}

model Activity {
  id          String   @id @default(cuid())
  type        String
  title       String
  description String?
  userId      String?
  videoId     String?
  metadata    Json?
  createdAt   DateTime @default(now())
  
  @@map("activities")
}